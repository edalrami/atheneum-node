<!DOCTYPE html>
<!--
Copyright (c) 2016 Google Inc.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<html>
<head>
    <meta charset=utf-8 />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Atheneum Filesharing- Browse</title>

    <!-- Material Design Theming -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <script defer src="https://code.getmdl.io/1.1.3/material.min.js"></script>
    <link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.blue_grey-amber.min.css" />
    <!----Main.css-------->
    <link rel="stylesheet" href="/main.css">

    <!-- Firebase -->
    <script src="https://www.gstatic.com/firebasejs/3.8.0/firebase.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.8.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.8.0/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.8.0/firebase-storage.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.1.0/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.9.0/firebase.js"></script>
    
    <!-- JQUERY -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    
   
    <!-----REMODAL------->
    <link rel="stylesheet" href="/remodal.css">
    <link rel="stylesheet" href="/remodal-default-theme.css">
    <script src="/remodal.min.js"></script>
    
    <!------WEB3-------->
    <script src="/web3.js"></script>
    
    <!-----left pad---->
     <script src="/leftpad.js"></script>
    

   <!------Initialize Firebase------>
    <script>
        // Initialize Firebase
        var config = {
            apiKey: "AIzaSyB-StGhM37us-nn-6X4GAcOk1gf7HfWQgc",
            authDomain: "atheneum-91b27.firebaseap.com",
            databaseURL: "https://atheneum-91b27.firebaseio.com",
            projectId: "atheneum-91b27",
            storageBucket: "atheneum-91b27.appspot.com",
            messagingSenderId: "541428318220"
        };
        firebase.initializeApp(config);
    </script>

</head>
<body>
<!-- Simple header with scrollable tabs. -->
<div class="mdl-layout mdl-js-layout mdl-layout--fixed-header">
    <header class="mdl-layout__header mdl-color-text--yellow-A700 mdl-color--blue-grey-800">
        <div class="mdl-layout__header-row">
            <!-- Title -->
            <span class="mdl-layout-title mdl-color-text--yellow-A700">Atheneum</span>
            <div class="mdl-layout-spacer"></div>
            <!-- Navigation -->
            <nav class="mdl-navigation">
                <a class="mdl-navigation__link mdl-color-text--yellow-A700" href="http://www.weekinethereum.com/">News</a>
                <a class="mdl-navigation__link mdl-color-text--yellow-A700" href="https://www.coinbase.com/">Coinbase</a>
            </nav>
        </div>
        <!-- Tabs -->
        <div class="mdl-layout__tab-bar mdl-js-ripple-effect">
            <a href="#scroll-tab-1" id="All" class="mdl-layout__tab is-active mdl-color-text--yellow-A700">All</a>
            <a href="#scroll-tab-2" id="History" class="mdl-layout__tab mdl-color-text--yellow-A700">History</a>
            <a href="#scroll-tab-3" id="Literature" class="mdl-layout__tab mdl-color-text--yellow-A700">Literature</a>
            <a href="#scroll-tab-4" id="Chemistry" class="mdl-layout__tab mdl-color-text--yellow-A700">Chemistry</a>
            <a href="#scroll-tab-5" id="Music" class="mdl-layout__tab mdl-color-text--yellow-A700">Music</a>
            <a href="#scroll-tab-6" id="Art" class="mdl-layout__tab mdl-color-text--yellow-A700">Art</a>
        </div>
    </header>
    <div class="mdl-layout__drawer mdl-color-text--yellow-A700 mdl-color--blue-grey-800">
        <span class="mdl-layout-title mdl-color-text--yellow-A700">Atheneum</span>
        <nav class="mdl-navigation">
            <a class="mdl-navigation__link mdl-color-text--yellow-A700" href="upload">Upload</a>
            <a class="mdl-navigation__link mdl-color-text--yellow-A700" href="download">Browse Files</a>
            <a class="mdl-navigation__link mdl-color-text--yellow-A700" href="index">My Account</a>
            <a class="mdl-navigation__link mdl-color-text--yellow-A700" id="sign_out">Sign Out</a>
        </nav>
    </div>
    <main class="mdl-layout__content mdl-color--blue-grey-800">
        
        <!-- "All" tab -->
        <section class="mdl-layout__tab-panel is-active mdl-color-text--grey-600 mdl-color--blue-grey-800" id="scroll-tab-1">
            <div class="page-content">
            <div class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop mdl-color-text--grey-600 mdl-color--blue-grey-500">
              <div class="mdl-card__title mdl-color--blue-grey-500 mdl-color-text--yellow-A700 ">
                <h2 class="mdl-card__title-text">Available Files:</h2>
              </div>
              <div class="mdl-card__supporting-text mdl-color-text--grey-600 mdl-color--blue-grey-500" id="messagesDiv">
                <div id="file_list_All">
                  <p> </p>
                </div>
              </div>
            </div>
                 <!--------Modal Popup---------->
                <div class="remodal" data-remodal-id="modal">
                    <button data-remodal-action="close" class="remodal-close"></button>
                    <h1>Confirm Download</h1>
                    <p>Please enter your Ethereum Wallet Address:</p>
                    <input type="text" id="downloaderAddress" name="walletAddress">
                    <br>
                    <br>
                    <button data-remodal-action="cancel" class="remodal-cancel">Cancel</button>
                    <button id ="downloadButton"data-remodal-action="confirm" class="remodal-confirm">Download</button>
                </div>
            </div>
        </section>
        <!-- "History" tab -->
        <section class="mdl-layout__tab-panel" id="scroll-tab-2">
            <div class="page-content">
                 <div class="page-content">
                <div class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop mdl-color-text--grey-600 mdl-color--blue-grey-500">
              <div class="mdl-card__title mdl-color--blue-grey-500 mdl-color-text--yellow-A700 ">
                <h2 class="mdl-card__title-text">Available Files:</h2>
              </div>
              <div class="mdl-card__supporting-text mdl-color-text--grey-600 mdl-color--blue-grey-500" id="messagesDiv">
                <div id="file_list_History">
                  <p> </p>
                </div>
              </div>
            </div>                
            </div>
            </div>
        </section>
        <!-- "Literature" tab -->
        <section class="mdl-layout__tab-panel" id="scroll-tab-3">
            <div class="page-content"><div class="page-content">
                <div class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop mdl-color-text--grey-600 mdl-color--blue-grey-500">
              <div class="mdl-card__title mdl-color--blue-grey-500 mdl-color-text--yellow-A700 ">
                <h2 class="mdl-card__title-text">Available Files:</h2>
              </div>
              <div class="mdl-card__supporting-text mdl-color-text--grey-600 mdl-color--blue-grey-500" id="messagesDiv">
                <div id="file_list_Literature">
                  <p> </p>
                </div>
              </div>
            </div>                
            </div></div>
        </section>
        <!-- "Chemistry" tab -->
        <section class="mdl-layout__tab-panel" id="scroll-tab-4">
            <div class="page-content">
                 <div class="page-content">
                <div class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop mdl-color-text--grey-600 mdl-color--blue-grey-500">
              <div class="mdl-card__title mdl-color--blue-grey-500 mdl-color-text--yellow-A700 ">
                <h2 class="mdl-card__title-text">Available Files:</h2>
              </div>
              <div class="mdl-card__supporting-text mdl-color-text--grey-600 mdl-color--blue-grey-500" id="messagesDiv">
                <div id="file_list_Chemistry">
                  <p> </p>
                </div>
              </div>
            </div>                
            </div>
            </div>
        </section>
        <!-- "Music" tab -->
        <section class="mdl-layout__tab-panel" id="scroll-tab-5">
            <div class="page-content">
                <div class="page-content">
                <div class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop mdl-color-text--grey-600 mdl-color--blue-grey-500">
              <div class="mdl-card__title mdl-color--blue-grey-500 mdl-color-text--yellow-A700 ">
                <h2 class="mdl-card__title-text">Available Files:</h2>
              </div>
              <div class="mdl-card__supporting-text mdl-color-text--grey-600 mdl-color--blue-grey-500" id="messagesDiv">
                <div id="file_list_Music">
                  <p> </p>
                </div>
              </div>
            </div>                
            </div>
            </div>
        </section>
        <!-- "Art" tab -->
        <section class="mdl-layout__tab-panel" id="scroll-tab-6">
            <div class="page-content"><div class="page-content">
                <div class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop mdl-color-text--grey-600 mdl-color--blue-grey-500">
              <div class="mdl-card__title mdl-color--blue-grey-500 mdl-color-text--yellow-A700 ">
                <h2 class="mdl-card__title-text">Available Files:</h2>
              </div>
              <div class="mdl-card__supporting-text mdl-color-text--grey-600 mdl-color--blue-grey-500" id="messagesDiv">
                <div id="file_list_Art">
                  <p> </p>
                </div>
              </div>
            </div>                
            </div></div>
        </section>
    </main>
</div>
<script>
    var auth = firebase.auth();
    var database = firebase.database();
    //db_ref points to the file tab in the DB
    var db_ref = database.ref("files").orderByChild('upvotes');
    var storage = firebase.storage();
    var storageRef = storage.ref();
    var current_user;     //Variable to store username
    var user_password;    //Variable to store user's Ethereum wallet password 
    var user_wallet;      //Variable to store user's Ethereum wallet address
    var global_child;     //Variable to store file id
    
    firebase.auth().onAuthStateChanged(function(user) {
      if (user) {
          // User is signed in.
          current_user = user.email;
      } else {
            // No user is signed in.
      }
    });
    
    //NOTE: If you're going to test the server app on heroku then use metamask so it injects web3
    //Initialize web3 instance...if MetaMask is installed as a plugin, then metamask will automaticaly inject web3
    //Otherwise set new web3 provider to the local host. Local host set to heroku app server. 
    if (typeof web3 !== 'undefined') {
        web3 = new Web3(web3.currentProvider);
    } else {
    // set the web3 provider to the node provided by Infura with the RPC connection below
         web3 = new Web3(new Web3.providers.HttpProvider("https://ropsten.infura.io/JZ2u24KnqTjj0qNuNXKk"));
    }    
    
    
    //Address of the current solidity contract deployed the ethereum testnet blockchain
    var contractAddress = "0x726e557485126244ef539b6bef89dee5899b30ca";
    
    
    //Declare Application Binary Interface. Allows for interaction
    //with solidity contract. Makes transactions readable. 
    //Note: See atheneum.sol for the contracts being used and the
    //defined functions handling transactions from the blockchain. 
   var ABI= [{
        "constant": true,
        "inputs": [],
        "name": "seller",
        "outputs": [{
            "name": "",
            "type": "address"
        }],
        "payable": false,
        "type": "function"
    }, {
        "constant": false,
        "inputs": [],
        "name": "abort",
        "outputs": [],
        "payable": false,
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "value",
        "outputs": [{
            "name": "",
            "type": "uint256"
        }],
        "payable": false,
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "buyer",
        "outputs": [{
            "name": "",
            "type": "address"
        }],
        "payable": false,
        "type": "function"
    }, {
        "constant": false,
        "inputs": [],
        "name": "confirmReceived",
        "outputs": [],
        "payable": false,
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "state",
        "outputs": [{
            "name": "",
            "type": "uint8"
        }],
        "payable": false,
        "type": "function"
    }, {
        "constant": false,
        "inputs": [],
        "name": "confirmPurchase",
        "outputs": [],
        "payable": true,
        "type": "function"
    }, {
        "inputs": [],
        "payable": true,
        "type": "constructor"
    }, {
        "anonymous": false,
        "inputs": [],
        "name": "Aborted",
        "type": "event"
    }, {
        "anonymous": false,
        "inputs": [],
        "name": "PurchaseConfirmed",
        "type": "event"
    }, {
        "anonymous": false,
        "inputs": [],
        "name": "ItemReceived",
        "type": "event"
    }]
   
   
   //Create Web3 Contract object with ABI array
   //Essentially this defines a contract object with the current functions defined
   //in the ABi array
    var myContract = web3.eth.contract(ABI);

    //Instantiate contract from an existing address. 
    //This takes myContract and uses the contract object myContract
    //and searches for a contract at a specified address on the tesnet blockchain
    var contractInstance = myContract.at(contractAddress);

    //Display list of files uploaded
    window.onload = function() {
        pull_db("All");
        document.getElementById("All").addEventListener("click", function(){
            pull_db("All");
            console.log("All pressed"); 
        });
        document.getElementById("History").addEventListener("click", function(){
            pull_db("History");
            console.log("History pressed"); 
        });
        document.getElementById("Literature").addEventListener("click", function(){
            pull_db("Literature");
            console.log("Literature pressed"); 
        });
        document.getElementById("Chemistry").addEventListener("click", function(){
            pull_db("Chemistry");
            console.log("Chemistry pressed"); 
        });
        document.getElementById("Music").addEventListener("click", function(){
            pull_db("Music");
            console.log("Music pressed"); 
        });
        document.getElementById("Art").addEventListener("click", function(){
            pull_db("Art");
            console.log("Art pressed"); 
        });
    }

    //Access the firebase DB and return all files that have the same category as the argument
    function pull_db(tag) {
        var file_list = document.getElementById('file_list_'+tag);
        file_list.innerHTML = "";
        //.once polls the database one time
        db_ref.once('value').then(function(snapshot) {
            //go through each element from the 'files' tab in the DB
            snapshot.forEach(function(child) {
                var child_key = child.key;
                var child_data = child.val();
                //add buttons 
                var up = "up";
                var down = "down";
                if(child_data.category === tag || tag == "All") {
                    console.log("There was a match with the tag: " + tag);
                    //orderByChild by default orders the DB in ascending order, so as the votecount increases, it will move down the list
                    file_list.innerHTML = file_list.innerHTML + "<button class=\"vote\" id=\""+child_key+"\" value=\"off\" onClick=\"vote(this.id, -1)\"> + </button>";
                    file_list.innerHTML = file_list.innerHTML + "&nbsp; &nbsp;";
                    file_list.innerHTML = file_list.innerHTML + "<button class=\"vote\" id=\""+child_key+"\" value=\"off\" onClick=\"vote(this.id, 1)\"> - </button>";
                    file_list.innerHTML = file_list.innerHTML + '&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;';
                    //display the file names and have them link to their cloud storage location
                    //file_list.innerHTML = file_list.innerHTML + '<a href="#modal' + child_data.loc + '">' + child_data.name;
                    file_list.innerHTML = file_list.innerHTML + '<a id =\"'+child_key+'\" onClick=\"displayModal(this.id)\">'+ child_data.name;
                    file_list.innerHTML = file_list.innerHTML + '<br>';
                }
            })
        });
    }

    //Change the votes value of a specific file
    function vote(key, vote){
        
        
        // var dl_ref = firebase.database().ref("files/"+file_key);
        // dl_ref.once("value").then(function(snapshot) {
            
        //     var match = false;
        //     var user_list = snapshot.val().downloader_list.split(";");
        //     if(user_list.length == 1) {
        //         match = false;
        //     }
        //     // Check if user is already a part of the list
        //     for (var i = 0; i < user_list.length; i++) {
        //         console.log(user_list[i]);
        //         if(user_list[i].localeCompare(email) == 0) {
        //             //match is found
        //             match = true;
        //         }
        //     }
        
        var db_ref = firebase.database().ref("files/"+key);
        db_ref.once("value").then(function(snapshot) {
            var new_count = snapshot.val().upvotes + vote; // {first:"Ada",last:"Lovelace"}
            console.log(new_count);
            db_ref.set({
                'name': snapshot.val().name,
                'loc': snapshot.val().loc,
                'owner': snapshot.val().owner,
                'category': snapshot.val().category,
                'desc': snapshot.val().desc,
                'upvotes': new_count
            });
        console.log(snapshot.val().upvotes);
        });
    }
    
    function displayModal(child){
      console.log(child);
      var inst = $('[data-remodal-id=modal]').remodal();
      inst.open();
      console.log("MODAL IS DISPLAYING")
      get_user_info(current_user)
      global_child = child;
      console.log("global_child: "+global_child);
    }
    
    $("#downloadButton").click(function() {
    //   if($("#downloaderAddress").val() != null){
    //       var buyer_address = "0x766e03463bA84d870B84a90f4Be761f35F71c1a0";
    //       //var seller_address = web3.eth
    //       contractInstance.value = web3.sha3(leftPad((1).toString(16), 64, 0), { encoding: 'hex' }).slice(2);
    //       console.log(contractInstance.value)
    //       contractInstance.seller = "0xDF56f2CD41D5AB7caaE414B4C7Adc75a3C4500c2";
    //       contractInstance.buyer = buyer_address;
    //       console.log("BUYER :" + buyer_address)
    //       console.log(contractInstance.seller)
    //       contractInstance.confirmPurchase(function(error, result){
    //           if(!error){
    //               console.log("SOL TEST "+ result);
    //           }else{
    //               console.log("SOL FAILED " + error);
    //           }
    //       });
         
    //   }
       
       add_downloader(current_user, global_child)
       
    });
    
    // Maintain the list of who has purchased a file
    // (used to determine who is allowed to vote on a submission)
    function add_downloader(email, file_key) {
        var dl_ref = firebase.database().ref("files/"+file_key);
        dl_ref.once("value").then(function(snapshot) {
            
            var match = false;
            var user_list = snapshot.val().downloader_list.split(";");
            if(user_list.length == 1) {
                match = false;
            }
            // Check if user is already a part of the list
            for (var i = 0; i < user_list.length; i++) {
                console.log(user_list[i]);
                if(user_list[i].localeCompare(email) == 0) {
                    //match is found
                    match = true;
                }
            }
            // If not, append them to the list
            if (match == false) {
                console.log("FALSE");
                new_dl_list = snapshot.val().downloader_list + email + ";";
            } else { // Else, maintain the current list
                console.log("TRUE");
                new_dl_list = snapshot.val().downloader_list;
            }
            dl_ref.set({
                'name': snapshot.val().name,
                'loc': snapshot.val().loc,
                'owner': snapshot.val().owner,
                'category': snapshot.val().category,
                'desc': snapshot.val().desc,
                'upvotes': snapshot.val().upvotes,
                'downloader_list': new_dl_list
            });
        });
    }
    
    
    $("#sign_out").click(function() {
              console.log("signing out");
              firebase.auth().signOut().then(function(){
                    //signed out successful
                    $("main").html("Signed out");
                }).catch(function(error){
                    //something went wrong
                    $("main").html("Not signed out");
              //get the current user 
              //sign them out from firebase
            });
    });
    
    
    //(DEBUG) Given an email, print all relevant
    //fields of that user's account
    function get_user_info(email) {
        var database_copy = firebase.database();
        console.log("looking for user with email: " + email);
        found = false;
        var users_ref = database_copy.ref("users");
        users_ref.once('value').then(function(snapshot) {
            snapshot.forEach(function(child) {
                var child_key = child.key;
                var child_data = child.val();
                if(child_data.email == email) {
                    
                    // Match has been found
                    console.log("Match found!");
                    
                    user_wallet = child_data.wallet_addr;
                    user_password = child_data.wallet_pass;
                    
                    console.log("Wallet Address: " + user_wallet);
                    console.log("Wallet Password: " + user_password);
                }
            })
        })
    }

</script>
</body>
</html>

















